{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { v4 as uuids4 } from 'uuid';\nconst initialState = {\n  todoList: [],\n  sortCriteria: 'All'\n};\nexport const TodoSlice = createSlice({\n  name: 'todo',\n  initialState,\n  reducers: {\n    setTodoList: (state, action) => {\n      state.todoList = action.payload;\n    },\n    addTodo: (state, action) => {\n      const {\n        task,\n        priorityCriteria\n      } = action.payload;\n      state.todoList.push({\n        id: uuids4(),\n        task,\n        priorityCriteria,\n        isCompleted: false\n      });\n    },\n    sortTodo: (state, action) => {\n      state.sortCriteria = action.payload;\n    },\n    updateTodo: (state, action) => {\n      const {\n        id,\n        task\n      } = action.payload;\n      const index = state.todoList.findIndex(todo => todo.id === id);\n      if (index !== -1) {\n        state.todoList[index] = {\n          ...state.todoList[index],\n          task\n        };\n      }\n    },\n    toggleTodo: (state, action) => {\n      const {\n        id,\n        isCompleted\n      } = action.payload;\n      const index = state.todoList.findIndex(todo => todo.id === id);\n      if (index !== -1) {\n        state.todoList[index] = {\n          ...state.todoList[index],\n          isCompleted\n        };\n      }\n    }\n  }\n});\nexport const {\n  setTodoList,\n  addTodo,\n  sortTodo,\n  updateTodo,\n  toggleTodo\n} = TodoSlice.actions;\nexport default TodoSlice.reducer;","map":{"version":3,"names":["createSlice","v4","uuids4","initialState","todoList","sortCriteria","TodoSlice","name","reducers","setTodoList","state","action","payload","addTodo","task","priorityCriteria","push","id","isCompleted","sortTodo","updateTodo","index","findIndex","todo","toggleTodo","actions","reducer"],"sources":["/Users/raulbarros/Desktop/todo-redux/src/features/todoList/TodoSlice.tsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { v4 as uuids4 } from 'uuid';\n\ninterface Todo {\n    id: string;\n    task: string;\n    isCompleted: boolean;\n    priorityCriteria: string;\n}\ninterface State {\n    todoList: Todo[];\n    sortCriteria: string;\n}\n\nconst initialState: State = {\n    todoList: [],\n    sortCriteria: 'All'\n}\n\n\nexport const TodoSlice = createSlice({\n    name: 'todo',\n    initialState,\n    reducers: {\n        setTodoList: (state, action) => {\n            state.todoList = action.payload;\n        },\n        addTodo: (state, action) => {\n            const { task, priorityCriteria } = action.payload;\n            state.todoList.push({\n              id: uuids4(),\n              task,\n              priorityCriteria,\n              isCompleted: false,\n            });\n        },\n        sortTodo: (state, action) => {\n            state.sortCriteria = action.payload;\n        },\n        updateTodo: (state, action) => {\n            const { id, task } = action.payload;\n            const index = state.todoList.findIndex(todo => todo.id === id);\n            if (index !== -1) {\n                state.todoList[index] = {\n                ...state.todoList[index],\n                    task\n                 }\n            }\n           \n        },\n        toggleTodo: (state, action) => {\n            const {id, isCompleted} = action.payload;\n            const index = state.todoList.findIndex(todo => todo.id === id);\n            if (index !== -1) {\n                state.todoList[index] = {\n                    ...state.todoList[index],\n                    isCompleted\n                }\n            }\n        }\n    },\n})\n\nexport const { setTodoList, addTodo, sortTodo, updateTodo, toggleTodo } = TodoSlice.actions\nexport default TodoSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAanC,MAAMC,YAAmB,GAAG;EACxBC,QAAQ,EAAE,EAAE;EACZC,YAAY,EAAE;AAClB,CAAC;AAGD,OAAO,MAAMC,SAAS,GAAGN,WAAW,CAAC;EACjCO,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACNC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACN,QAAQ,GAAGO,MAAM,CAACC,OAAO;IACnC,CAAC;IACDC,OAAO,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MACxB,MAAM;QAAEG,IAAI;QAAEC;MAAiB,CAAC,GAAGJ,MAAM,CAACC,OAAO;MACjDF,KAAK,CAACN,QAAQ,CAACY,IAAI,CAAC;QAClBC,EAAE,EAAEf,MAAM,CAAC,CAAC;QACZY,IAAI;QACJC,gBAAgB;QAChBG,WAAW,EAAE;MACf,CAAC,CAAC;IACN,CAAC;IACDC,QAAQ,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MACzBD,KAAK,CAACL,YAAY,GAAGM,MAAM,CAACC,OAAO;IACvC,CAAC;IACDQ,UAAU,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAM;QAAEM,EAAE;QAAEH;MAAK,CAAC,GAAGH,MAAM,CAACC,OAAO;MACnC,MAAMS,KAAK,GAAGX,KAAK,CAACN,QAAQ,CAACkB,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACN,EAAE,KAAKA,EAAE,CAAC;MAC9D,IAAII,KAAK,KAAK,CAAC,CAAC,EAAE;QACdX,KAAK,CAACN,QAAQ,CAACiB,KAAK,CAAC,GAAG;UACxB,GAAGX,KAAK,CAACN,QAAQ,CAACiB,KAAK,CAAC;UACpBP;QACH,CAAC;MACN;IAEJ,CAAC;IACDU,UAAU,EAAEA,CAACd,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAM;QAACM,EAAE;QAAEC;MAAW,CAAC,GAAGP,MAAM,CAACC,OAAO;MACxC,MAAMS,KAAK,GAAGX,KAAK,CAACN,QAAQ,CAACkB,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACN,EAAE,KAAKA,EAAE,CAAC;MAC9D,IAAII,KAAK,KAAK,CAAC,CAAC,EAAE;QACdX,KAAK,CAACN,QAAQ,CAACiB,KAAK,CAAC,GAAG;UACpB,GAAGX,KAAK,CAACN,QAAQ,CAACiB,KAAK,CAAC;UACxBH;QACJ,CAAC;MACL;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAET,WAAW;EAAEI,OAAO;EAAEM,QAAQ;EAAEC,UAAU;EAAEI;AAAW,CAAC,GAAGlB,SAAS,CAACmB,OAAO;AAC3F,eAAenB,SAAS,CAACoB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}