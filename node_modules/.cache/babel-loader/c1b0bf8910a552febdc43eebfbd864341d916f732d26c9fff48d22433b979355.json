{"ast":null,"code":"var _jsxFileName = \"/Users/raulbarros/Desktop/todo-redux/src/components/TodoList.tsx\",\n  _s = $RefreshSig$();\n// import {ChangeEvent, ChangeEventHandler, useCallback, useEffect, useMemo, useState} from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { setTodoList, addTodo, updateTodo, removeTodo, filterCompletedTodo, State } from '../features/todoList/TodoSlice';\n// import './styles/TodoList.css';\n// import { clickOptions } from '@testing-library/user-event/dist/click';\n\n// function TodoList() {\n//   const [inputValue, setInputValue] = useState('');\n//   const [priorityCriteria, setPriorityCriteria] = useState(\"High\");\n//   const [filter, setFilter] = useState('All');\n\n//   const dispatch = useDispatch();\n//   const todoList = useSelector((state: State) => state.todoList);\n\n//   useEffect(() => {\n//     document.title = `You have ${todoList.length} todos`;\n// }, [todoList]);\n//   //  console.log(todoList)\n//   const handleAddTodo = useCallback(() => {\n//     dispatch(addTodo({\n//       task: inputValue,\n//       priorityCriteria,\n//       isCompleted: false\n//     }));\n//     setInputValue('');\n//   },[dispatch, inputValue, priorityCriteria])\n\n//   const handleRemoveTodo = useCallback((todoId: string) => {\n//     const todoToRemove = todoList.find(todo => todo.id === todoId);\n//     if (todoToRemove){\n//       dispatch(removeTodo({\n//         id: todoId,\n//       }))\n//     }\n//   }, [dispatch, todoList])\n\n//   const handleInputChange = useCallback((e: ChangeEvent<HTMLInputElement>) =>{\n//     const inputValue = e.target.value\n//     setInputValue(inputValue)\n//   }, []);\n\n//   const handlePriorityCriteria = useCallback((e: ChangeEvent<HTMLSelectElement>) => {\n//     setPriorityCriteria(e.target.value)\n//   },[]);\n\n//   const handleUpdatePriority: ChangeEventHandler<HTMLSelectElement> = useCallback((e) => {\n//     const updatedPriority = e.target.value  \n//     // console.log(updatedPriority)\n//     const id = e.currentTarget.dataset.todoId \n//       if (id) {\n//         dispatch(updateTodo({\n//           id: id,\n//           priorityCriteria: updatedPriority\n//         }))\n//       }\n//   }, [dispatch, todoList])\n//   /*I tried to update the priority \n//   inside the select options box, but I could't find a way, \n//   even though it does change the value as you can see with the console.log*/\n\n//   const handleToggleTodo = useCallback((todoId: string) => {\n//     const todoToToggle = todoList.find(todo => todo.id === todoId);\n//     if (todoToToggle) {\n//       dispatch(updateTodo({\n//         id: todoId,\n//         isCompleted: !todoToToggle.isCompleted\n//        }))\n//     }\n//   },[dispatch, todoList])\n\n//   //Sort\n//   const filteredTodoList = useMemo(() => {\n//     switch(filter) {\n//       case 'Completed':\n//         return todoList.filter(todo => todo.isCompleted);\n//       case 'Pending': \n//         return todoList.filter(todo => !todo.isCompleted);\n//       default:\n//         return todoList;\n//     }\n//   },[todoList, filter])\n\n//   return (\n//     <>\n//     <h1>Raul's Todo List</h1>\n\n//     <div className=\"addTodoContainer\">\n//         <input\n//          className=\"input\"\n//          id=\"todo\"\n//          type=\"text\"\n//          value={inputValue} \n//          placeholder='Add your todo...'\n//          onChange={handleInputChange}\n//          />\n\n//           <select \n//             value={priorityCriteria}\n//             onChange={handlePriorityCriteria}\n//           >\n//             <option value=\"High\">High</option>\n//             <option value=\"Medium\">Medium</option>\n//             <option value=\"Low\">Low</option>\n//           </select>\n\n//          <button \n//          onClick={handleAddTodo}\n//          className=\"addTodoButton\">ADD TODO</button>\n//     </div>\n//       <br />\n//     <div>\n//       <button onClick={() => setFilter('Completed')}>Show Completed</button>\n//       <button onClick={() => setFilter('Pending')}>Show Pending</button>\n//       <button onClick={() => setFilter('All')}>Show All</button>\n//     </div>\n//       {filteredTodoList.map(todo => (\n//         <div className=\"todo\" key={todo.id}>\n//         <p>TASK: {todo.task}</p>\n//         <p>{todo.isCompleted ? 'Completed' : 'Pending'}</p>\n//         <button \n//           onClick={() => handleToggleTodo(todo.id)}\n//         >{todo.isCompleted ? 'Mark Incomplete' : 'Mark Complete'}</button>\n//         <br />\n//         <select \n//             value={todo.id === priorityCriteria ? todo.priorityCriteria : priorityCriteria}\n//             onChange={(e) => handleUpdatePriority(e)}\n//             data-todo-id={todo.id}\n//           >\n//             <option value=\"High\">High</option>\n//             <option value=\"Medium\">Medium</option>\n//             <option value=\"Low\">Low</option>\n//           </select>\n//           <br />\n//         <button\n//          onClick={() => handleRemoveTodo(todo.id)}>Remove</button>\n//         </div>\n\n//       ))}\n//     </>\n//   )\n// }\n\n// export default TodoList;\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTodo, updateTodo, removeTodo } from '../features/todoList/TodoSlice';\nimport './styles/TodoList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [priorityCriteria, setPriorityCriteria] = useState(\"High\");\n  const [filter, setFilter] = useState('All');\n  const dispatch = useDispatch();\n  const todoList = useSelector(state => state.todoList);\n  useEffect(() => {\n    document.title = `You have ${todoList.length} todos`;\n  }, [todoList]);\n  const handleAddTodo = useCallback(() => {\n    dispatch(addTodo({\n      task: inputValue,\n      priorityCriteria,\n      isCompleted: false\n    }));\n    setInputValue('');\n  }, [dispatch, inputValue, priorityCriteria]);\n  const handleRemoveTodo = useCallback(todoId => {\n    dispatch(removeTodo({\n      id: todoId\n    }));\n  }, [dispatch, todoList]);\n  const handleInputChange = useCallback(e => {\n    const inputValue = e.target.value;\n    setInputValue(inputValue);\n  }, []);\n  const handlePriorityCriteria = useCallback(e => {\n    setPriorityCriteria(e.target.value);\n  }, []);\n  const handleUpdatePriority = useCallback(e => {\n    const updatedPriority = e.target.value;\n    const id = e.currentTarget.dataset.todoId;\n    if (id) {\n      dispatch(updateTodo({\n        id: id,\n        priorityCriteria: updatedPriority\n      }));\n    }\n  }, [dispatch, todoList]);\n  const handleToggleTodo = useCallback(todoId => {\n    const todoToToggle = todoList.find(todo => todo.id === todoId);\n    if (todoToToggle) {\n      dispatch(updateTodo({\n        id: todoId,\n        isCompleted: !todoToToggle.isCompleted\n      }));\n    }\n  }, [dispatch, todoList]);\n  const filteredTodoList = useMemo(() => {\n    switch (filter) {\n      case 'Completed':\n        return todoList.filter(todo => todo.isCompleted);\n      case 'Pending':\n        return todoList.filter(todo => !todo.isCompleted);\n      default:\n        return todoList;\n    }\n  }, [todoList, filter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Raul's Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-todo-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        id: \"todo\",\n        type: \"text\",\n        value: inputValue,\n        placeholder: \"Add your todo...\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"priority-select\",\n        value: priorityCriteria,\n        onChange: handlePriorityCriteria,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"High\",\n          children: \"High\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Medium\",\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Low\",\n          children: \"Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-todo-button\",\n        onClick: handleAddTodo,\n        children: \"ADD TODO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter('Completed'),\n        children: \"Show Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter('Pending'),\n        children: \"Show Pending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter('All'),\n        children: \"Show All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), filteredTodoList.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"todo-task\",\n        children: [\"TASK: \", todo.task]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"todo-status\",\n        children: todo.isCompleted ? 'Completed' : 'Pending'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-button\",\n        onClick: () => handleToggleTodo(todo.id),\n        children: todo.isCompleted ? 'Mark Incomplete' : 'Mark Complete'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"priority-select\",\n        value: todo.id === priorityCriteria ? todo.priorityCriteria : priorityCriteria,\n        onChange: e => handleUpdatePriority(e),\n        \"data-todo-id\": todo.id,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"High\",\n          children: \"High\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Medium\",\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Low\",\n          children: \"Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"remove-button\",\n        onClick: () => handleRemoveTodo(todo.id),\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this)]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"qY7ve1luHCg9SqTYZzutOzmChOw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["useCallback","useEffect","useMemo","useState","useDispatch","useSelector","addTodo","updateTodo","removeTodo","jsxDEV","_jsxDEV","TodoList","_s","inputValue","setInputValue","priorityCriteria","setPriorityCriteria","filter","setFilter","dispatch","todoList","state","document","title","length","handleAddTodo","task","isCompleted","handleRemoveTodo","todoId","id","handleInputChange","e","target","value","handlePriorityCriteria","handleUpdatePriority","updatedPriority","currentTarget","dataset","handleToggleTodo","todoToToggle","find","todo","filteredTodoList","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","map","_c","$RefreshReg$"],"sources":["/Users/raulbarros/Desktop/todo-redux/src/components/TodoList.tsx"],"sourcesContent":["// import {ChangeEvent, ChangeEventHandler, useCallback, useEffect, useMemo, useState} from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { setTodoList, addTodo, updateTodo, removeTodo, filterCompletedTodo, State } from '../features/todoList/TodoSlice';\n// import './styles/TodoList.css';\n// import { clickOptions } from '@testing-library/user-event/dist/click';\n\n// function TodoList() {\n//   const [inputValue, setInputValue] = useState('');\n//   const [priorityCriteria, setPriorityCriteria] = useState(\"High\");\n//   const [filter, setFilter] = useState('All');\n\n//   const dispatch = useDispatch();\n//   const todoList = useSelector((state: State) => state.todoList);\n\n//   useEffect(() => {\n//     document.title = `You have ${todoList.length} todos`;\n// }, [todoList]);\n//   //  console.log(todoList)\n//   const handleAddTodo = useCallback(() => {\n//     dispatch(addTodo({\n//       task: inputValue,\n//       priorityCriteria,\n//       isCompleted: false\n//     }));\n//     setInputValue('');\n//   },[dispatch, inputValue, priorityCriteria])\n  \n//   const handleRemoveTodo = useCallback((todoId: string) => {\n//     const todoToRemove = todoList.find(todo => todo.id === todoId);\n//     if (todoToRemove){\n//       dispatch(removeTodo({\n//         id: todoId,\n//       }))\n//     }\n//   }, [dispatch, todoList])\n\n\n//   const handleInputChange = useCallback((e: ChangeEvent<HTMLInputElement>) =>{\n//     const inputValue = e.target.value\n//     setInputValue(inputValue)\n//   }, []);\n  \n//   const handlePriorityCriteria = useCallback((e: ChangeEvent<HTMLSelectElement>) => {\n//     setPriorityCriteria(e.target.value)\n//   },[]);\n\n//   const handleUpdatePriority: ChangeEventHandler<HTMLSelectElement> = useCallback((e) => {\n//     const updatedPriority = e.target.value  \n//     // console.log(updatedPriority)\n//     const id = e.currentTarget.dataset.todoId \n//       if (id) {\n//         dispatch(updateTodo({\n//           id: id,\n//           priorityCriteria: updatedPriority\n//         }))\n//       }\n//   }, [dispatch, todoList])\n//   /*I tried to update the priority \n//   inside the select options box, but I could't find a way, \n//   even though it does change the value as you can see with the console.log*/\n\n//   const handleToggleTodo = useCallback((todoId: string) => {\n//     const todoToToggle = todoList.find(todo => todo.id === todoId);\n//     if (todoToToggle) {\n//       dispatch(updateTodo({\n//         id: todoId,\n//         isCompleted: !todoToToggle.isCompleted\n//        }))\n//     }\n//   },[dispatch, todoList])\n\n//   //Sort\n//   const filteredTodoList = useMemo(() => {\n//     switch(filter) {\n//       case 'Completed':\n//         return todoList.filter(todo => todo.isCompleted);\n//       case 'Pending': \n//         return todoList.filter(todo => !todo.isCompleted);\n//       default:\n//         return todoList;\n//     }\n//   },[todoList, filter])\n\n//   return (\n//     <>\n//     <h1>Raul's Todo List</h1>\n\n//     <div className=\"addTodoContainer\">\n//         <input\n//          className=\"input\"\n//          id=\"todo\"\n//          type=\"text\"\n//          value={inputValue} \n//          placeholder='Add your todo...'\n//          onChange={handleInputChange}\n//          />\n         \n//           <select \n//             value={priorityCriteria}\n//             onChange={handlePriorityCriteria}\n//           >\n//             <option value=\"High\">High</option>\n//             <option value=\"Medium\">Medium</option>\n//             <option value=\"Low\">Low</option>\n//           </select>\n         \n//          <button \n//          onClick={handleAddTodo}\n//          className=\"addTodoButton\">ADD TODO</button>\n//     </div>\n//       <br />\n//     <div>\n//       <button onClick={() => setFilter('Completed')}>Show Completed</button>\n//       <button onClick={() => setFilter('Pending')}>Show Pending</button>\n//       <button onClick={() => setFilter('All')}>Show All</button>\n//     </div>\n//       {filteredTodoList.map(todo => (\n//         <div className=\"todo\" key={todo.id}>\n//         <p>TASK: {todo.task}</p>\n//         <p>{todo.isCompleted ? 'Completed' : 'Pending'}</p>\n//         <button \n//           onClick={() => handleToggleTodo(todo.id)}\n//         >{todo.isCompleted ? 'Mark Incomplete' : 'Mark Complete'}</button>\n//         <br />\n//         <select \n//             value={todo.id === priorityCriteria ? todo.priorityCriteria : priorityCriteria}\n//             onChange={(e) => handleUpdatePriority(e)}\n//             data-todo-id={todo.id}\n//           >\n//             <option value=\"High\">High</option>\n//             <option value=\"Medium\">Medium</option>\n//             <option value=\"Low\">Low</option>\n//           </select>\n//           <br />\n//         <button\n//          onClick={() => handleRemoveTodo(todo.id)}>Remove</button>\n//         </div>\n       \n//       ))}\n//     </>\n//   )\n// }\n\n// export default TodoList;\nimport { ChangeEvent, ChangeEventHandler, useCallback, useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTodo, updateTodo, removeTodo, filterCompletedTodo, State } from '../features/todoList/TodoSlice';\nimport './styles/TodoList.css';\n\nfunction TodoList() {\n  const [inputValue, setInputValue] = useState('');\n  const [priorityCriteria, setPriorityCriteria] = useState(\"High\");\n  const [filter, setFilter] = useState('All');\n\n  const dispatch = useDispatch();\n  const todoList = useSelector((state: State) => state.todoList);\n\n  useEffect(() => {\n    document.title = `You have ${todoList.length} todos`;\n  }, [todoList]);\n\n  const handleAddTodo = useCallback(() => {\n    dispatch(addTodo({\n      task: inputValue,\n      priorityCriteria,\n      isCompleted: false\n    }));\n    setInputValue('');\n  }, [dispatch, inputValue, priorityCriteria]);\n\n  const handleRemoveTodo = useCallback((todoId: string) => {\n    dispatch(removeTodo({\n      id: todoId,\n    }));\n  }, [dispatch, todoList]);\n\n  const handleInputChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const inputValue = e.target.value;\n    setInputValue(inputValue);\n  }, []);\n\n  const handlePriorityCriteria = useCallback((e: ChangeEvent<HTMLSelectElement>) => {\n    setPriorityCriteria(e.target.value);\n  }, []);\n\n  const handleUpdatePriority: ChangeEventHandler<HTMLSelectElement> = useCallback((e) => {\n    const updatedPriority = e.target.value;\n    const id = e.currentTarget.dataset.todoId;\n    if (id) {\n      dispatch(updateTodo({\n        id: id,\n        priorityCriteria: updatedPriority\n      }));\n    }\n  }, [dispatch, todoList]);\n\n  const handleToggleTodo = useCallback((todoId: string) => {\n    const todoToToggle = todoList.find(todo => todo.id === todoId);\n    if (todoToToggle) {\n      dispatch(updateTodo({\n        id: todoId,\n        isCompleted: !todoToToggle.isCompleted\n      }));\n    }\n  }, [dispatch, todoList]);\n\n  const filteredTodoList = useMemo(() => {\n    switch (filter) {\n      case 'Completed':\n        return todoList.filter(todo => todo.isCompleted);\n      case 'Pending':\n        return todoList.filter(todo => !todo.isCompleted);\n      default:\n        return todoList;\n    }\n  }, [todoList, filter]);\n\n  return (\n    <div className=\"todo-list-container\">\n      <h1>Raul's Todo List</h1>\n\n      <div className=\"add-todo-container\">\n        <input\n          className=\"input\"\n          id=\"todo\"\n          type=\"text\"\n          value={inputValue}\n          placeholder='Add your todo...'\n          onChange={handleInputChange}\n        />\n\n        <select\n          className=\"priority-select\"\n          value={priorityCriteria}\n          onChange={handlePriorityCriteria}\n        >\n          <option value=\"High\">High</option>\n          <option value=\"Medium\">Medium</option>\n          <option value=\"Low\">Low</option>\n        </select>\n\n        <button\n          className=\"add-todo-button\"\n          onClick={handleAddTodo}\n        >\n          ADD TODO\n        </button>\n      </div>\n\n      <div className=\"filter-buttons\">\n        <button onClick={() => setFilter('Completed')}>Show Completed</button>\n        <button onClick={() => setFilter('Pending')}>Show Pending</button>\n        <button onClick={() => setFilter('All')}>Show All</button>\n      </div>\n\n      {filteredTodoList.map(todo => (\n        <div className=\"todo-item\" key={todo.id}>\n          <p className=\"todo-task\">TASK: {todo.task}</p>\n          <p className=\"todo-status\">{todo.isCompleted ? 'Completed' : 'Pending'}</p>\n          <button className=\"toggle-button\" onClick={() => handleToggleTodo(todo.id)}>\n            {todo.isCompleted ? 'Mark Incomplete' : 'Mark Complete'}\n          </button>\n          <select\n            className=\"priority-select\"\n            value={todo.id === priorityCriteria ? todo.priorityCriteria : priorityCriteria}\n            onChange={(e) => handleUpdatePriority(e)}\n            data-todo-id={todo.id}\n          >\n            <option value=\"High\">High</option>\n            <option value=\"Medium\">Medium</option>\n            <option value=\"Low\">Low</option>\n          </select>\n          <button className=\"remove-button\" onClick={() => handleRemoveTodo(todo.id)}>Remove</button>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default TodoList;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAA0CA,WAAW,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAClG,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,OAAO,EAAEC,UAAU,EAAEC,UAAU,QAAoC,gCAAgC;AAC5G,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACY,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAAC,MAAM,CAAC;EAChE,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMgB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAMgB,QAAQ,GAAGf,WAAW,CAAEgB,KAAY,IAAKA,KAAK,CAACD,QAAQ,CAAC;EAE9Dn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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}