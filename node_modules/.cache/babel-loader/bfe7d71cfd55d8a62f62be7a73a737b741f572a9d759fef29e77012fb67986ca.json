{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { v4 as uuids4 } from 'uuid';\nconst initialState = [];\nexport const TodoSlice = createSlice({\n  name: 'todoList',\n  initialState,\n  reducers: {\n    setTodoList: (state, action) => {\n      state = action.payload;\n    },\n    addTodo: (state, action) => {\n      const {\n        task,\n        priorityCriteria\n      } = action.payload;\n      state.push({\n        id: uuids4(),\n        task,\n        priorityCriteria,\n        isCompleted: false\n      });\n    },\n    updateTodo: (state, action) => {\n      const {\n        id,\n        isCompleted,\n        priorityCriteria\n      } = action.payload;\n      const todoToUpdate = state.find(todo => todo.id === id);\n      if (todoToUpdate) {\n        todoToUpdate.isCompleted = isCompleted;\n        todoToUpdate.priorityCriteria = priorityCriteria;\n      }\n    },\n    removeTodo: (state, action) => {\n      const {\n        id\n      } = action.payload;\n      const newTodoList = state.filter(todo => todo.id !== id);\n      return newTodoList;\n    },\n    filterCompletedTodo: (state, action) => {\n      const {\n        id,\n        isCompleted\n      } = action.payload;\n      const completedList = state.filter(todo => todo.isCompleted === isCompleted);\n      return completedList;\n    }\n  }\n});\nexport const {\n  setTodoList,\n  addTodo,\n  updateTodo,\n  removeTodo,\n  filterCompletedTodo\n} = TodoSlice.actions;\nexport default TodoSlice.reducer;","map":{"version":3,"names":["createSlice","v4","uuids4","initialState","TodoSlice","name","reducers","setTodoList","state","action","payload","addTodo","task","priorityCriteria","push","id","isCompleted","updateTodo","todoToUpdate","find","todo","removeTodo","newTodoList","filter","filterCompletedTodo","completedList","actions","reducer"],"sources":["/Users/raulbarros/Desktop/todo-redux/src/features/todoList/TodoSlice.tsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { v4 as uuids4 } from 'uuid';\n\ninterface Todo {\n    id: string;\n    task: string;\n    isCompleted: boolean;\n    priorityCriteria: string;\n}\nexport interface State {\n    todoList: Todo[];\n}\n\nconst initialState: Todo[] = [];\n\nexport const TodoSlice = createSlice({\n    name: 'todoList',\n    initialState,\n    reducers: {\n        setTodoList: (state, action) => {\n            state = action.payload;\n        },\n        addTodo: (state, action) => {\n            const { task, priorityCriteria } = action.payload;\n            state.push({\n              id: uuids4(),\n              task,\n              priorityCriteria,\n              isCompleted: false,\n            });\n        },\n        updateTodo: (state, action) => {\n          const { id, isCompleted, priorityCriteria } = action.payload;\n          const todoToUpdate = state.find(todo => todo.id === id);\n          if (todoToUpdate) {\n            todoToUpdate.isCompleted = isCompleted;\n            todoToUpdate.priorityCriteria = priorityCriteria;\n          }\n        },\n        removeTodo: (state, action) => {\n            const { id } = action.payload;\n            const newTodoList = state.filter(todo => todo.id !== id);\n            return newTodoList;\n        },\n        filterCompletedTodo: (state, action) => {\n            const { id, isCompleted } = action.payload;\n            const completedList = state.filter(todo => todo.isCompleted === isCompleted);\n            return completedList;\n        }\n    },\n})\n\nexport const { setTodoList, addTodo, updateTodo, removeTodo, filterCompletedTodo } = TodoSlice.actions\nexport default TodoSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAYnC,MAAMC,YAAoB,GAAG,EAAE;AAE/B,OAAO,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EACjCK,IAAI,EAAE,UAAU;EAChBF,YAAY;EACZG,QAAQ,EAAE;IACNC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,GAAGC,MAAM,CAACC,OAAO;IAC1B,CAAC;IACDC,OAAO,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MACxB,MAAM;QAAEG,IAAI;QAAEC;MAAiB,CAAC,GAAGJ,MAAM,CAACC,OAAO;MACjDF,KAAK,CAACM,IAAI,CAAC;QACTC,EAAE,EAAEb,MAAM,CAAC,CAAC;QACZU,IAAI;QACJC,gBAAgB;QAChBG,WAAW,EAAE;MACf,CAAC,CAAC;IACN,CAAC;IACDC,UAAU,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAM;QAAEM,EAAE;QAAEC,WAAW;QAAEH;MAAiB,CAAC,GAAGJ,MAAM,CAACC,OAAO;MAC5D,MAAMQ,YAAY,GAAGV,KAAK,CAACW,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACL,EAAE,KAAKA,EAAE,CAAC;MACvD,IAAIG,YAAY,EAAE;QAChBA,YAAY,CAACF,WAAW,GAAGA,WAAW;QACtCE,YAAY,CAACL,gBAAgB,GAAGA,gBAAgB;MAClD;IACF,CAAC;IACDQ,UAAU,EAAEA,CAACb,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAM;QAAEM;MAAG,CAAC,GAAGN,MAAM,CAACC,OAAO;MAC7B,MAAMY,WAAW,GAAGd,KAAK,CAACe,MAAM,CAACH,IAAI,IAAIA,IAAI,CAACL,EAAE,KAAKA,EAAE,CAAC;MACxD,OAAOO,WAAW;IACtB,CAAC;IACDE,mBAAmB,EAAEA,CAAChB,KAAK,EAAEC,MAAM,KAAK;MACpC,MAAM;QAAEM,EAAE;QAAEC;MAAY,CAAC,GAAGP,MAAM,CAACC,OAAO;MAC1C,MAAMe,aAAa,GAAGjB,KAAK,CAACe,MAAM,CAACH,IAAI,IAAIA,IAAI,CAACJ,WAAW,KAAKA,WAAW,CAAC;MAC5E,OAAOS,aAAa;IACxB;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAElB,WAAW;EAAEI,OAAO;EAAEM,UAAU;EAAEI,UAAU;EAAEG;AAAoB,CAAC,GAAGpB,SAAS,CAACsB,OAAO;AACtG,eAAetB,SAAS,CAACuB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}